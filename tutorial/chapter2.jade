.step(data-title='Routes', data-file='app/Http/routes.php')
  :markdown
    ## Routes
      The web part of the application is a simple CRUD layer over the `Appointment` exposed as a set of RESTful endpoints. We'll skim over most of the implementation since most developers are likely familiar with most of the concepts. Here you can see the Laravel resource that will generate GET, POST, PUT/PATCH, and DELETE endpoints for the resource. We have also included a root handler that will redirect the app's root URL to the appointment index route. [You can find more information on the conventions in Laravel's documentation.](http://laravel.com/docs/5.0/controllers#restful-resource-controllers)

.step(data-title='Model and Controller', data-file='app/Http/Controllers/AppointmentController.php')

  :markdown
    ## The model
      As mentioned in the introduction, the interaction with the database is done solely through Eloquent and we have defined exactly one model that only specifies the table where the rows are going to be saved. Eloquent can take it from here. As in common in Laravel applications, the database is modified through migrations. The migrations under `database/migrations` and the model are the core of the persistence layer of the application.
    ## The controller
    The controller simply implements the CRUD operations. The validation simply checks that all fields are present and that the phone number only has numbers and possibly symbols. This is [to allow for storage of numbers in E.164 format](https://www.twilio.com/help/faq/phone-numbers/how-do-i-format-phone-numbers-to-work-internationally). As you might have noticed, we save the date and time in UTC, but also save the timezone offset in order to compute the user's local time for appointment reminders

.step(data-title='The views', data-file='resources/views/appointment/_form.blade.php')

  :markdown
    ## The view
      The view layer is standard [Laravel's Blade templates](http://laravel.com/docs/5.1/blade). In order to keep everything nice and tidy the views inherit from a master template and then render their own content into it. We include a few libraries: [Bootstrap](http://getbootstrap.com/) and [jQuery](https://jquery.com/) are the most important ones. The view displaying the index can be found as `resources/views/appointment/index.blade.php` and the partial view containing the main form used to create/edit appointments can be found in `resources/views/appointment/_form.blade.php`. That's all for the web part of the application.

      Next we will send the SMS reminders using a background job.